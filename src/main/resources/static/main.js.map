{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/store/models/product-order.model.ts","webpack:///./src/app/store/models/product-orders.model.ts","webpack:///./src/app/store/orders/orders.component.css","webpack:///./src/app/store/orders/orders.component.html","webpack:///./src/app/store/orders/orders.component.ts","webpack:///./src/app/store/products/products.component.css","webpack:///./src/app/store/products/products.component.html","webpack:///./src/app/store/products/products.component.ts","webpack:///./src/app/store/services/StoreService.ts","webpack:///./src/app/store/shopping-cart/shopping-cart.component.css","webpack:///./src/app/store/shopping-cart/shopping-cart.component.html","webpack:///./src/app/store/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/store/store.component.css","webpack:///./src/app/store/store.component.html","webpack:///./src/app/store/store.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\n  padding-top: 65px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-store></app-store>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {StoreService} from \"./store/services/StoreService\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [StoreService]\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StoreComponent } from './store/store.component';\nimport { ProductsComponent } from './store/products/products.component';\nimport { OrdersComponent } from './store/orders/orders.component';\nimport { ShoppingCartComponent } from './store/shopping-cart/shopping-cart.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StoreComponent,\n    ProductsComponent,\n    OrdersComponent,\n    ShoppingCartComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [StoreComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Product} from \"./product.model\";\n\nexport class ProductOrder {\n  product: Product;\n  quantity: number;\n\n  constructor(product: Product, quantity: number){\n    this.product = product;\n    this.quantity = quantity;\n  }\n}\n","import {ProductOrder} from \"./product-order.model\";\n\nexport class ProductOrders {\n  productOrders: ProductOrder[] = [];\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"text-center\\\">ORDER</h2>\\n<ul>\\n  <li *ngFor=\\\"let order of orders.productOrders\\\">\\n    {{ order.product.name }} - ${{ order.product.price }} x {{ order.quantity}} pcs.\\n  </li>\\n</ul>\\n<h3 class=\\\"text-right\\\">Total amount: ${{ total }}</h3>\\n\\n<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"pay()\\\" *ngIf=\\\"!paid\\\">Pay</button>\\n\\n<div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"paid\\\">\\n  <strong>Congratulation!</strong> You successfully made the order.\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {StoreService} from \"../services/StoreService\";\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: ProductOrders;\n  total: number;\n  paid: boolean;\n  sub: Subscription;\n\n  constructor(private storeService: StoreService) {\n    this.orders = this.storeService.ProductOrders;\n  }\n\n  ngOnInit() {\n    this.paid = false;\n    this.sub = this.storeService.OrdersChanged.subscribe(()=>{\n      this.orders = this.storeService.ProductOrders;\n    });\n    this.loadTotal();\n  }\n\n  pay(){\n    this.paid = true;\n    this.storeService.saveOrder(this.orders).subscribe();\n  }\n\n  loadTotal() {\n    this.sub = this.storeService.TotalChanged.subscribe(() => {\n      this.total = this.storeService.Total;\n    });\n  }\n\n}\n","module.exports = \".padding-0 {\\n  padding-right: 0;\\n  padding-left: 1;\\n}\\n\\n\"","module.exports = \"<div class=\\\"row card-deck\\\">\\n  <div class=\\\"col-lg-4 col-md-6 mb-4\\\" *ngFor=\\\"let order of productOrders\\\">\\n    <div class=\\\"card text-center\\\">\\n      <div class=\\\"card-header\\\">\\n        <h4>{{order.product.name}}</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <a href=\\\"#\\\"><img class=\\\"card-img-top\\\" src={{order.product.pictureUrl}} alt=\\\"\\\"></a>\\n        <h5 class=\\\"card-title\\\">${{order.product.price}}</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n            <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=order.quantity>\\n          </div>\\n          <div class=\\\"col-4 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addToCart(order)\\\"\\n                    [disabled]=\\\"order.quantity <= 0\\\">Add To Cart\\n            </button>\\n          </div>\\n          <div class=\\\"col-12\\\" *ngIf=\\\"isProductSelected(order.product)\\\">\\n            <button class=\\\"btn btn-primary btn-block\\\"\\n                    (click)=\\\"removeFromCart(order)\\\">Remove From Cart\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {Product} from \"../models/product.model\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subscription} from \"rxjs\";\nimport {StoreService} from \"../services/StoreService\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  productOrders: ProductOrder[] = [];\n  products: Product[] = [];\n  selectedProductOrder: ProductOrder;\n  private shoppingCartOrders: ProductOrders;\n  sub: Subscription;\n  productSelected: boolean = false;\n\n  constructor(private storeService: StoreService) { }\n\n  ngOnInit() {\n    this.productOrders = [];\n    this.loadProducts();\n    this.loadOrders();\n  }\n\n  loadProducts(){\n    this.storeService.getAllProducts()\n      .subscribe(\n        (products: any[]) => {\n          this.products = products;\n          this.products.forEach(product =>{\n            this.productOrders.push(new ProductOrder(product,0))\n          })\n        },\n        (error) => console.log(error)\n      );\n  }\n\n  loadOrders(){\n    this.sub = this.storeService.OrdersChanged.subscribe(() => {\n      this.shoppingCartOrders = this.storeService.ProductOrders;\n    });\n  }\n\n  addToCart(order: ProductOrder) {\n    this.storeService.SelectedProductOrder = order;\n    this.selectedProductOrder = this.storeService.SelectedProductOrder;\n    this.productSelected = true;\n  }\n\n  removeFromCart(productOrder: ProductOrder){\n    let index = this.getProductIndex(productOrder.product);\n    if (index > -1) {\n      this.shoppingCartOrders.productOrders.splice(\n        this.getProductIndex(productOrder.product), 1);\n    }\n    this.storeService.ProductOrders = this.shoppingCartOrders;\n    this.shoppingCartOrders = this.storeService.ProductOrders;\n    this.productSelected = false;\n  }\n\n  getProductIndex(product: Product): number {\n    return this.storeService.ProductOrders.productOrders.findIndex(\n      value => value.product === product\n    );\n  }\n\n  isProductSelected(product: Product): boolean {\n    return this.getProductIndex(product) > -1;\n  }\n\n  reset() {\n    this.productOrders = [];\n    this.loadProducts();\n    this.storeService.ProductOrders.productOrders = [];\n    this.loadOrders();\n    this.productSelected = false;\n  }\n}\n\n\n\n\n","import {Injectable} from \"@angular/core\";\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subject} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class StoreService {\n  private productsUrl = \"api/products\";\n  private ordersUrl = \"api/orders\";\n\n  private _productOrder: ProductOrder;\n  private _orders: ProductOrders = new ProductOrders();\n\n  private productOrderSubject = new Subject();\n  private ordersSubject = new Subject();\n  private totalSubject = new Subject();\n\n  private _total: number;\n\n  ProductOrderChanged = this.productOrderSubject.asObservable();\n  OrdersChanged = this.ordersSubject.asObservable();\n  TotalChanged = this.totalSubject.asObservable();\n\n  constructor(private http: HttpClient){\n  }\n\n  getAllProducts(){\n    return this.http.get(this.productsUrl);\n  }\n\n  saveOrder(order: ProductOrders){\n    return this.http.post(this.ordersUrl, order);\n  }\n\n  set SelectedProductOrder(value: ProductOrder){\n    this._productOrder = value;\n    this.productOrderSubject.next();\n  }\n\n  get SelectedProductOrder(){\n    return this._productOrder;\n  }\n\n  get ProductOrders() {\n    return this._orders;\n  }\n\n  set ProductOrders(value: ProductOrders) {\n    this._orders = value;\n    this.ordersSubject.next();\n  }\n\n  get Total(){\n    return this._total;\n  }\n\n  set Total(value: number){\n    this._total = value;\n    this.totalSubject.next();\n  }\n\n}\n\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"card text-white bg-info mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n  <div class=\\\"card-header text-center\\\">Shopping Cart</div>\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Total: ${{total}}</h5>\\n    <hr>\\n    <h6 class=\\\"card-title\\\">Items bought:</h6>\\n\\n    <ul>\\n      <li *ngFor=\\\"let order of orders.productOrders\\\">\\n        {{ order.product.name }} - {{ order.quantity}} pcs.\\n      </li>\\n    </ul>\\n\\n    <button class=\\\"btn btn-light btn-block\\\" (click)=\\\"finishOrder()\\\"\\n            [disabled]=\\\"orders.productOrders.length == 0\\\">Checkout\\n    </button>\\n  </div>\\n</div>\\n\"","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subscription} from \"rxjs\";\nimport {StoreService} from \"../services/StoreService\";\nimport {ProductOrder} from \"../models/product-order.model\";\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy{\n\n  orderFinished: boolean;\n  orders: ProductOrders;\n  total: number;\n  sub: Subscription;\n\n  @Output() onOrderFinished: EventEmitter<boolean>;\n\n  constructor(private storeServie: StoreService) {\n    this.total = 0;\n    this.orderFinished = false;\n    this.onOrderFinished = new EventEmitter<boolean>();\n  }\n\n  ngOnInit() {\n    this.orders = new ProductOrders();\n    this.loadCart();\n    this.loadTotal();\n  }\n\n  loadTotal(){\n    this.sub = this.storeServie.OrdersChanged.subscribe(() =>{\n      this.total = this.calculateTotal(this.orders.productOrders);\n    });\n  }\n\n  loadCart(){\n    this.sub = this.storeServie.ProductOrderChanged.subscribe(()=>{\n      let productOrder = this.storeServie.SelectedProductOrder;\n      if(productOrder){\n        this.orders.productOrders.push(new ProductOrder(\n          productOrder.product, productOrder.quantity\n        ));\n      }\n      this.storeServie.ProductOrders = this.orders;\n      this.orders = this.storeServie.ProductOrders;\n      this.total = this.calculateTotal(this.orders.productOrders);\n    });\n  }\n\n  private calculateTotal(products: ProductOrder[]): number {\n    let sum = 0;\n    products.forEach(value => {\n      sum += (value.product.price * value.quantity);\n    });\n    return sum;\n  }\n\n  finishOrder() {\n    this.orderFinished = true;\n    this.storeServie.Total = this.total;\n    this.onOrderFinished.emit(this.orderFinished);\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  reset() {\n    this.orderFinished = false;\n    this.orders = new ProductOrders();\n    this.orders.productOrders = []\n    this.loadTotal();\n    this.total = 0;\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Spring Boot Strap Store</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\n            data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\"\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"toggleCollapsed()\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div id=\\\"navbarResponsive\\\" [ngClass]=\\\"{'collapse': collapsed, 'navbar-collapse': true}\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"reset()\\\">Home\\n            <span class=\\\"sr-only\\\">(current)</span>\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n    <app-products #productsC [hidden]=\\\"orderFinished\\\"></app-products>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <app-shopping-cart (onOrderFinished)=finishOrder($event) #shoppingCartC\\n                       [hidden]=\\\"orderFinished\\\"></app-shopping-cart>\\n  </div>\\n  <div class=\\\"col-md-6 offset-3\\\">\\n    <app-orders #ordersC [hidden]=\\\"!orderFinished\\\"></app-orders>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProductsComponent} from \"./products/products.component\";\nimport {ShoppingCartComponent} from \"./shopping-cart/shopping-cart.component\";\nimport {OrdersComponent} from \"./orders/orders.component\";\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n\n  private collapsed = true;\n  orderFinished = false;\n\n  @ViewChild('productsC')\n  productsC: ProductsComponent;\n\n  @ViewChild('shoppingCartC')\n  shoppingCartC: ShoppingCartComponent;\n\n  @ViewChild('ordersC')\n  ordersC: OrdersComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleCollapsed(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  finishOrder(orderFinished: boolean) {\n    this.orderFinished = orderFinished;\n  }\n\n  reset() {\n    this.orderFinished = false;\n    this.productsC.reset();\n    this.shoppingCartC.reset();\n    this.ordersC.paid = false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}